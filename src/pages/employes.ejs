<!DOCTYPE html>
<html lang="fr" class="h-100">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employés</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        main {
            flex: 1;
        }
    </style>
</head>
<body class="d-flex flex-column h-100 <%= locals.isAdmin ? 'bg-dark text-white' : '' %>">
    <%- include('../components/header') %>

    <main class="flex-shrink-0">
        <div class="container mt-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Nos employés</h1>
                <button class="btn btn-success" onclick="ajouterEmploye()">
                    <i class="fas fa-plus"></i> Ajouter un employé
                </button>
            </div>
            <div id="employes-container" class="row">
                <!-- Les employés seront affichés ici -->
            </div>
        </div>
    </main>

    <%- include('../components/footer') %>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Fonction pour charger les employés
        async function loadEmployes() {
            try {
                const response = await fetch('/api/employes', {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const employes = await response.json();
                const container = document.getElementById('employes-container');
                container.innerHTML = '';
                
                if (!employes || employes.length === 0) {
                    container.innerHTML = '<div class="alert alert-info">Aucun employé disponible</div>';
                    return;
                }
                
                const isDarkMode = document.body.classList.contains('bg-dark');
                
                employes.forEach(employe => {
                    const employeCard = `
                        <div class="col-md-4 mb-4">
                            <div class="card h-100 ${isDarkMode ? 'bg-dark text-white' : ''} border-primary">
                                <div class="card-body">
                                    <h5 class="card-title">${employe.nom}</h5>
                                    <div class="mt-3">
                                        <p class="mb-2">
                                            <span class="badge bg-primary">Role: ${employe.role || 'N/A'}</span>
                                            <span class="badge bg-secondary">Salaire: ${employe.salaire} €</span>
                                        </p>
                                        <p class="mb-2">
                                            <span class="badge bg-info">Email: ${employe.email || 'N/A'}</span>
                                        </p>
                                        <p class="mb-2">
                                            <span class="badge bg-info">Téléphone: ${employe.telephone || 'N/A'}</span>
                                        </p>
                                    </div>
                                    <div class="mt-3 d-flex gap-2 justify-content-between">
                                        <button class="btn btn-outline-primary" onclick="voirDetails(${employe.id_employe})">
                                            <i class="fas fa-eye"></i> Voir
                                        </button>
                                        <button type="button" class="btn btn-warning" onclick="modifierEmploye(${employe.id_employe})">
                                        <i class="fas fa-edit"></i> Modifier
                                    </button>
                                        <button class="btn btn-danger" onclick="supprimerEmploye(${employe.id_employe})">
                                            <i class="fas fa-trash"></i> Supprimer
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    container.insertAdjacentHTML('beforeend', employeCard);
                });
                
            } catch (error) {
                console.error('Erreur:', error);
                document.getElementById('employes-container').innerHTML = 
                    `<div class="alert alert-danger">Erreur lors du chargement des employés: ${error.message}</div>`;
            }
        }

        // Fonction pour ajouter un employé
        async function ajouterEmploye() {
            const modalHtml = `
                <div class="modal fade" id="addEmployeModal" tabindex="-1">
                    <div class="modal-dialog">
                        <div class="modal-content ${document.body.classList.contains('bg-dark') ? 'bg-dark text-white' : ''}">
                            <div class="modal-header">
                                <h5 class="modal-title">Ajouter un nouvel employé</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                            </div>
                            <div class="modal-body">
                                <form id="addEmployeForm">
                                    <div class="mb-3">
                                        <label for="nom" class="form-label">Nom</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-user"></i>
                                            </span>
                                            <input type="text" class="form-control" id="nom" required>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-envelope"></i>
                                            </span>
                                            <input type="email" 
                                                   class="form-control" 
                                                   id="email" 
                                                   pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                                                   placeholder="exemple@domaine.com"
                                                   oninput="validateEmail(this)"
                                                   onblur="checkEmailFormat(this)">
                                        </div>
                                        <div id="emailHelp" class="form-text text-muted">Format: exemple@domaine.com</div>
                                        <div id="emailFeedback" class="invalid-feedback">
                                            Veuillez entrer une adresse email valide
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="telephone" class="form-label">Téléphone</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-phone"></i>
                                            </span>
                                            <input type="tel" 
                                                   class="form-control" 
                                                   id="telephone" 
                                                   pattern="[0-9]{10}"
                                                   placeholder="0XXXXXXXXX"
                                                   oninput="this.value = this.value.replace(/[^0-9]/g, '')"
                                                   maxlength="10">
                                        </div>
                                        <small class="form-text text-muted">Format: 0XXXXXXXXX (10 chiffres)</small>
                                    </div>
                                    <div class="mb-3">
                                        <label for="adresse" class="form-label">Adresse</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-map-marker-alt"></i>
                                            </span>
                                            <input type="text" class="form-control" id="adresse">
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="role" class="form-label">Rôle</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-briefcase"></i>
                                            </span>
                                            <select class="form-select" id="role" required>
                                                <option value="">Sélectionner un rôle</option>
                                                <option value="Vendeuse">Vendeuse/Vendeur</option>
                                                <option value="Gestionnaire de stock">Gestionnaire de stock</option>
                                                <option value="Responsable magasin">Responsable magasin</option>
                                                <option value="Caissier">Caissier(ère)</option>
                                                <option value="Contrôleur qualité textile">Contrôleur qualité textile</option>
                                                <option value="Responsable RH">Responsable RH</option>
                                                <option value="Agent logistique">Agent logistique</option>
                                                <option value="Chef de rayon">Chef de rayon</option>
                                                <option value="Responsable des achats">Responsable des achats</option>
                                                <option value="Responsable marketing">Responsable marketing</option>
                                                <option value="Agent de sécurité">Agent de sécurité</option>
                                                <option value="Responsable entrepôt">Responsable entrepôt</option>
                                                <option value="Comptable">Comptable</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="salaire" class="form-label">Salaire</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-euro-sign"></i>
                                            </span>
                                            <input type="number" class="form-control" id="salaire" step="0.01" required>
                                        </div>
                                    </div>
                                    <div class="mb-3">
                                        <label for="date_naissance" class="form-label">Date de naissance</label>
                                        <div class="input-group">
                                            <span class="input-group-text">
                                                <i class="fas fa-calendar-alt"></i>
                                            </span>
                                            <input type="date" class="form-control" id="date_naissance" required>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                <button type="button" class="btn btn-primary" onclick="soumettreNouvelEmploye()">Ajouter</button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.insertAdjacentHTML('beforeend', modalHtml);
            const modal = new bootstrap.Modal(document.getElementById('addEmployeModal'));
            modal.show();
        }

        // Fonction pour soumettre un nouvel employé
        async function soumettreNouvelEmploye() {
            try {
                const formData = {
                    nom: document.getElementById('nom').value,
                    email: document.getElementById('email').value,
                    telephone: document.getElementById('telephone').value,
                    adresse: document.getElementById('adresse').value,
                    role: document.getElementById('role').value,
                    salaire: parseFloat(document.getElementById('salaire').value),
                    date_naissance: document.getElementById('date_naissance').value
                };

                const response = await fetch('/api/employes', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || `Erreur HTTP: ${response.status}`);
                }

                const modal = bootstrap.Modal.getInstance(document.getElementById('addEmployeModal'));
                modal.hide();
                document.getElementById('addEmployeModal').remove();
                
                await loadEmployes();
                alert('Employé ajouté avec succès');
            } catch (error) {
                console.error('Erreur:', error);
                alert(`Erreur lors de l'ajout de l'employé: ${error.message}`);
            }
        }

        // Fonction pour modifier un employé
        async function modifierEmploye(id) {
            try {
                const response = await fetch(`/api/employes/${id}`);
                const employe = await response.json();
                
                const modalHtml = `
                    <div class="modal fade" id="editEmployeModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content ${document.body.classList.contains('bg-dark') ? 'bg-dark text-white' : ''}">
                                <div class="modal-header">
                                    <h5 class="modal-title">Modifier l'employé</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <form id="editEmployeForm">
                                        <div class="mb-3">
                                            <label for="edit_nom" class="form-label">Nom</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-user"></i>
                                                </span>
                                                <input type="text" class="form-control" id="edit_nom" value="${employe.nom}" required>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_email" class="form-label">Email</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-envelope"></i>
                                                </span>
                                                <input type="email" 
                                                       class="form-control" 
                                                       id="edit_email" 
                                                       pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                                                       placeholder="exemple@domaine.com"
                                                       oninput="validateEmail(this)"
                                                       onblur="checkEmailFormat(this)"
                                                       value="${employe.email || ''}">
                                            </div>
                                            <div id="editEmailHelp" class="form-text text-muted">Format: exemple@domaine.com</div>
                                            <div id="editEmailFeedback" class="invalid-feedback">
                                                Veuillez entrer une adresse email valide
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_telephone" class="form-label">Téléphone</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-phone"></i>
                                                </span>
                                                <input type="tel" 
                                                       class="form-control" 
                                                       id="edit_telephone" 
                                                       pattern="[0-9]{10}"
                                                       placeholder="0XXXXXXXXX"
                                                       oninput="this.value = this.value.replace(/[^0-9]/g, '')"
                                                       maxlength="10"
                                                       value="${employe.telephone || ''}">
                                            </div>
                                            <small class="form-text text-muted">Format: 0XXXXXXXXX (10 chiffres)</small>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_adresse" class="form-label">Adresse</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-map-marker-alt"></i>
                                                </span>
                                                <input type="text" class="form-control" id="edit_adresse" value="${employe.adresse || ''}">
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_role" class="form-label">Rôle</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-briefcase"></i>
                                                </span>
                                                <select class="form-select" id="edit_role" required>
                                                    <option value="">Sélectionner un rôle</option>
                                                    <option value="Vendeuse" ${employe.role === 'Vendeuse' ? 'selected' : ''}>Vendeuse/Vendeur</option>
                                                    <option value="Gestionnaire de stock" ${employe.role === 'Gestionnaire de stock' ? 'selected' : ''}>Gestionnaire de stock</option>
                                                    <option value="Responsable magasin" ${employe.role === 'Responsable magasin' ? 'selected' : ''}>Responsable magasin</option>
                                                    <option value="Caissier" ${employe.role === 'Caissier' ? 'selected' : ''}>Caissier(ère)</option>
                                                    <option value="Contrôleur qualité textile" ${employe.role === 'Contrôleur qualité textile' ? 'selected' : ''}>Contrôleur qualité textile</option>
                                                    <option value="Responsable RH" ${employe.role === 'Responsable RH' ? 'selected' : ''}>Responsable RH</option>
                                                    <option value="Agent logistique" ${employe.role === 'Agent logistique' ? 'selected' : ''}>Agent logistique</option>
                                                    <option value="Chef de rayon" ${employe.role === 'Chef de rayon' ? 'selected' : ''}>Chef de rayon</option>
                                                    <option value="Responsable des achats" ${employe.role === 'Responsable des achats' ? 'selected' : ''}>Responsable des achats</option>
                                                    <option value="Responsable marketing" ${employe.role === 'Responsable marketing' ? 'selected' : ''}>Responsable marketing</option>
                                                    <option value="Agent de sécurité" ${employe.role === 'Agent de sécurité' ? 'selected' : ''}>Agent de sécurité</option>
                                                    <option value="Responsable entrepôt" ${employe.role === 'Responsable entrepôt' ? 'selected' : ''}>Responsable entrepôt</option>
                                                    <option value="Comptable" ${employe.role === 'Comptable' ? 'selected' : ''}>Comptable</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_salaire" class="form-label">Salaire</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-euro-sign"></i>
                                                </span>
                                                <input type="number" class="form-control" id="edit_salaire" step="0.01" value="${employe.salaire}" required>
                                            </div>
                                        </div>
                                        <div class="mb-3">
                                            <label for="edit_date_naissance" class="form-label">Date de naissance</label>
                                            <div class="input-group">
                                                <span class="input-group-text">
                                                    <i class="fas fa-calendar-alt"></i>
                                                </span>
                                                <input type="date" class="form-control" id="edit_date_naissance" value="${employe.date_naissance}" required>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                    <button type="button" class="btn btn-primary" onclick="soumettreModificationEmploye(${id})">Enregistrer</button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                const oldModal = document.getElementById('editEmployeModal');
                if (oldModal) oldModal.remove();
                
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                const modal = new bootstrap.Modal(document.getElementById('editEmployeModal'));
                modal.show();
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors de la modification de l\'employé');
            }
        }

        // Fonction pour soumettre la modification d'un employé
        async function soumettreModificationEmploye(id) {
            try {
                const formData = {
                    nom: document.getElementById('edit_nom').value,
                    email: document.getElementById('edit_email').value,
                    telephone: document.getElementById('edit_telephone').value,
                    adresse: document.getElementById('edit_adresse').value,
                    role: document.getElementById('edit_role').value,
                    salaire: parseFloat(document.getElementById('edit_salaire').value),
                    date_naissance: document.getElementById('edit_date_naissance').value
                };

                const response = await fetch(`/api/employes/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });

                if (!response.ok) {
                    throw new Error(`Erreur HTTP: ${response.status}`);
                }

                const modal = bootstrap.Modal.getInstance(document.getElementById('editEmployeModal'));
                modal.hide();
                document.getElementById('editEmployeModal').remove();

                await loadEmployes();
                alert('Employé modifié avec succès');
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors de la modification de l\'employé');
            }
        }

        // Fonction pour voir les détails d'un employé
        async function voirDetails(id) {
            try {
                const response = await fetch(`/api/employes/${id}`, {
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`Erreur HTTP: ${response.status}`);
                }
                
                const employe = await response.json();
                
                const modalHtml = `
                    <div class="modal fade" id="employeModal" tabindex="-1">
                        <div class="modal-dialog">
                            <div class="modal-content ${document.body.classList.contains('bg-dark') ? 'bg-dark text-white' : ''}">
                                <div class="modal-header">
                                    <h5 class="modal-title">Détails de l'employé: ${employe.nom}</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="card ${document.body.classList.contains('bg-dark') ? 'bg-dark text-white' : ''} border-primary">
                                        <div class="card-body">
                                            <h6 class="card-subtitle mb-3 text-muted">Informations personnelles</h6>
                                            <p><strong>Nom:</strong> ${employe.nom}</p>
                                            <p><strong>Email:</strong> ${employe.email || 'Non renseigné'}</p>
                                            <p><strong>Téléphone:</strong> ${employe.telephone || 'Non renseigné'}</p>
                                            <p><strong>Adresse:</strong> ${employe.adresse || 'Non renseignée'}</p>
                                            
                                            <h6 class="card-subtitle mb-3 mt-4 text-muted">Informations professionnelles</h6>
                                            <p><strong>Rôle:</strong> ${employe.role || 'Non renseigné'}</p>
                                            <p><strong>Salaire:</strong> ${employe.salaire.toLocaleString('fr-FR')} €</p>
                                            <p><strong>Date de naissance:</strong> ${new Date(employe.date_naissance).toLocaleDateString('fr-FR')}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                                    <button type="button" class="btn btn-primary" onclick="modifierEmploye(${employe.id_employe})">
                                        <i class="fas fa-edit"></i> Modifier
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                const oldModal = document.getElementById('employeModal');
                if (oldModal) oldModal.remove();
                
                document.body.insertAdjacentHTML('beforeend', modalHtml);
                const modal = new bootstrap.Modal(document.getElementById('employeModal'));
                modal.show();
                
            } catch (error) {
                console.error('Erreur:', error);
                alert('Erreur lors de la récupération des détails de l\'employé');
            }
        }

        // Fonction pour supprimer un employé
        async function supprimerEmploye(id) {
            if (confirm('Êtes-vous sûr de vouloir supprimer cet employé ?')) {
                try {
                    const response = await fetch(`/api/employes/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || `Erreur HTTP: ${response.status}`);
                    }

                    await loadEmployes();
                    alert('Employé supprimé avec succès');
                } catch (error) {
                    console.error('Erreur:', error);
                    alert(`Erreur lors de la suppression de l'employé: ${error.message}`);
                }
            }
        }

        // Charger les employés au chargement de la page
        window.addEventListener('load', loadEmployes);

        function validateEmail(input) {
            const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
            const isValid = emailRegex.test(input.value);
            
            if (isValid) {
                input.classList.remove('is-invalid');
                input.classList.add('is-valid');
            } else {
                input.classList.remove('is-valid');
                if (input.value !== '') {
                    input.classList.add('is-invalid');
                }
            }
        }

        function checkEmailFormat(input) {
            if (input.value !== '' && !input.value.includes('@')) {
                input.classList.add('is-invalid');
                const feedback = input.nextElementSibling;
                if (feedback) {
                    feedback.textContent = "L'adresse email doit contenir un @";
                }
            }
        }
    </script>
</body>
</html>
