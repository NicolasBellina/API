<!DOCTYPE html>
<html lang="fr" class="h-100">
<head>
    <!-- Encodage du contenu -->
    <meta charset="UTF-8">
    <!-- Contrôle de la taille de l'écran -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Titre de la page -->
    <title>Produits</title>
    <!-- Feuille de style de Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Mise en page flexible */
        body {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }
        /* Mise en page du contenu principal */
        main {
            /* Prendre tout l'espace disponible */
            flex: 1;
        }
    </style>
</head>
<body class="d-flex flex-column h-100 <%= locals.isAdmin ? 'bg-dark text-white' : '' %>">
    <%- include('../components/header') %>

    <!-- Contenu principal -->
    <main class="flex-shrink-0">
        <!-- Contenu principal ici -->
        <div class="container mt-4">
            <h1>Nos produits</h1>
            <div id="products-container" class="row">
                <!-- Les produits seront affichés ici -->
            </div>
        </div>
    </main>

    <!-- Pied de page -->
    <%- include('../components/footer') %>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        async function loadProducts() {
            try {
                console.log('Début du chargement des produits');
                const response = await fetch('/api/products', {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/json'
                    }
                });
                
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                const products = await response.json();
                console.log('Données reçues:', products);
                
                const container = document.getElementById('products-container');
                
                if (!products || products.length === 0) {
                    container.innerHTML = '<div class="alert alert-info">Aucun produit disponible</div>';
                    return;
                }
                
                
                const row = document.createElement('div');
                row.className = 'row g-4';
                
                // Vérifier si le body a la classe bg-dark pour déterminer le thème
                const isDarkMode = document.body.classList.contains('bg-dark');
                
                products.forEach(product => {
                    const productCard = `
                        <div class="col-md-4 mb-4">
                            <div class="card h-100 ${isDarkMode ? 'bg-dark text-white' : ''} border-primary">
                                <div class="card-body">
                                    <h5 class="card-title">${product.nom}</h5>
                                    <p class="card-text">${product.description || 'Aucune description'}</p>
                                    <div class="mt-3">
                                        <p class="mb-2">
                                            <span class="badge bg-primary">Prix: ${product.prix} €</span>
                                            <span class="badge bg-secondary">Stock: ${product.quantite_stock}</span>
                                        </p>
                                        <p class="mb-2">
                                            <span class="badge bg-info">Type: ${product.type_produit}</span>
                                            <span class="badge bg-info">Taille: ${product.taille_id || 'N/A'}</span>
                                        </p>
                                        <p class="mb-2">
                                            <span class="badge bg-info">Couleur: ${product.couleur_id || 'N/A'}</span>
                                            <span class="badge bg-info">Marque: ${product.marque_id || 'N/A'}</span>
                                        </p>
                                    </div>
                                    <div class="mt-3">
                                        <button class="btn btn-outline-primary">
                                            Voir détails
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    row.innerHTML += productCard;
                });
                
                container.appendChild(row);
                
            } catch (error) {
                console.error('Erreur détaillée:', error);
                document.getElementById('products-container').innerHTML = 
                    `<div class="alert alert-danger">
                        Erreur lors du chargement des produits: ${error.message}
                    </div>`;
            }
        }

        // Charger les produits au chargement de la page
        window.addEventListener('load', loadProducts);
    </script>
</body>
</html>